<ui:composition xmlns="http://www.w3.org/1999/xhtml" xmlns:ui="http://xmlns.jcp.org/jsf/facelets" xmlns:f="http://xmlns.jcp.org/jsf/core" xmlns:h="http://xmlns.jcp.org/jsf/html"
                xmlns:hftl="http://hftl.org" xmlns:hf="http://xmlns.jcp.org/jsf/composite/tags" xmlns:p="http://primefaces.org/ui" xmlns:pe="http://primefaces.org/ui/extensions" xmlns:o="http://omnifaces.org/ui"
                xmlns:c="http://xmlns.jcp.org/jsp/jstl/core" xmlns:s="http://jboss.org/seam/faces">

    <h:form id="graphqlQueryFieldsForm">
        <p:panel width="100" header="#{messages['customizedEntities.graphqlQueryField']}">
            <h:panelGroup id="graphqlQueryFieldsPanel">
                <p:messages/>
                <p:dataTable id="graphqlQueryFieldDatatable" value="#{customEntityTemplateBean.graphqlQueryFields}" var="graphqlQueryField" sortOrder="ascending" sortBy="#{entity.classnameToDisplayHuman}"
                             paginator="true" rows="30" resizableColumns="true"
                             paginatorTemplate="{RowsPerPageDropdown} {FirstPageLink} {PreviousPageLink} {CurrentPageReport} {NextPageLink} {LastPageLink}" rowsPerPageTemplate="30,50"
                             lazy="true" styleClass="custom-grid" rowIndexVar="rowIndex">
                    <p:column headerText="#{messages['graphqlQueryField.fieldName']}">
                        <h:outputText value="#{graphqlQueryField.fieldName}" styleClass="field-value" />
                    </p:column>
                    <p:column headerText="#{messages['graphqlQueryField.fieldType']}">
                        <h:outputText value="#{graphqlQueryField.fieldType}" styleClass="field-value" />
                    </p:column>
                    <p:column headerText="#{messages['graphqlQueryField.multivalued']}">
                        <h:outputText value="#{messages[graphqlQueryField.multivalued.toString()=='true'?'commons.yes':'commons.no']}" styleClass="field-value" />
                    </p:column>
                    <p:column headerText="#{messages['graphqlQueryField.query']}">
                        <h:outputText value="#{graphqlQueryField.query}" styleClass="field-value" />
                    </p:column>
                    <p:column styleClass="actions-column" headerText="#{messages['commons.actions']}"  rendered="#{userBean.edit}">
                        <p:commandButton id="editfieldBtn" icon="ui-icon-document" oncomplete="PF('graphqlQueryFieldsDialog').show()" update=":graphqlQueryFieldsDialog"
                                         actionListener="#{customEntityTemplateBean.editGraphqlQueryField(graphqlQueryField)}">
                        </p:commandButton>
                        <p:commandButton action="#{customEntityTemplateBean.removeGraphqlQueryField(graphqlQueryField)}" icon="ui-icon-trash" update=":graphqlQueryFieldsForm:graphqlQueryFieldsPanel" />
                    </p:column>
                    <f:facet name="footer">
                        <p:commandButton action="#{customEntityTemplateBean.addGraphqlQueryField}" id="addGraphqlQueryField" value="#{messages['commons.addNew']}" oncomplete="PF('graphqlQueryFieldsDialog').show()"  update=":graphqlQueryFieldsDialogForm"></p:commandButton>
                    </f:facet>
                </p:dataTable>
            </h:panelGroup>
        </p:panel>
    </h:form>
    <p:dialog id="graphqlQueryFieldsDialog" header="#{messages['graphqlQueryField.addgraphqlQueryField.header']}" widgetVar="graphqlQueryFieldsDialog" modal="true" closeOnEscape="true" width="60%" closable="true" appendTo="@(body)">
        <hftl:decorateFormPanel formId="graphqlQueryFieldsDialogForm">
            <ui:define name="fields">
                <h:panelGrid columns="1">
                    <h:panelGrid columns="2">
                        <hftl:decorateFormField fieldId="fieldName" label="#{messages['graphqlQueryField.fieldName']}">
                            <p:inputText id="fieldName" value="#{customEntityTemplateBean.graphqlQueryField.fieldName}" size="53" maxlength="100"  readonly="#{customEntityTemplateBean.isUpdate}" />
                        </hftl:decorateFormField>
                        <hftl:decorateFormField fieldId="fieldType" label="#{messages['graphqlQueryField.fieldType']}" >
                            <p:inputText id="fieldType" value="#{customEntityTemplateBean.graphqlQueryField.fieldType}" size="53" maxlength="100" disabled="false" />
                        </hftl:decorateFormField>
                    </h:panelGrid>
                    <h:panelGrid columns="1">
                        <hftl:decorateFormField fieldId="multivalued" label="#{messages['graphqlQueryField.multivalued']}" >
                            <p:selectBooleanCheckbox id="multivalued" value="#{customEntityTemplateBean.graphqlQueryField.multivalued}">
                            </p:selectBooleanCheckbox>
                        </hftl:decorateFormField>
                    </h:panelGrid>
                    <h:panelGrid columns="2">
                        <hftl:decorateFormField fieldId="query" label="#{messages['graphqlQueryField.query']}" >
                            <p:inputText id="query" value="#{customEntityTemplateBean.graphqlQueryField.query}" size="114" maxlength="120"/>
                        </hftl:decorateFormField>
                    </h:panelGrid>
                </h:panelGrid>
            </ui:define>
            <ui:define name="buttons">
                <p:commandButton value="#{messages['action.save']}" action="#{customEntityTemplateBean.saveGraphqlQueryField()}" update=":cetForm:messages :graphqlQueryFieldsForm"
                                 oncomplete="if (args &amp;&amp; !args.validationFailed){PF('graphqlQueryFieldsDialog').hide();}" ajax="true" />
                <p:button value="#{messages['action.cancel']}" onclick="PF('graphqlQueryFieldsDialog').hide(); return false;" />
            </ui:define>
        </hftl:decorateFormPanel>
    </p:dialog>
</ui:composition>