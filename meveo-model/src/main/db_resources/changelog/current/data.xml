<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.5.xsd">

    <changeSet author="AbdelmounaimAkadid" id="#3224_16022018">
        <insert tableName="adm_role">
            <column name="id" valueNumeric="-6" />
            <column name="version" valueNumeric="0" />
            <column name="role_description" value="Customer care user" />
            <column name="role_name" value="CUSTOMER_CARE_USER" />
        </insert>
        <insert tableName="adm_role_role">
            <column name="role_id" valueNumeric="-6" />
            <column name="child_role_id" valueNumeric="-3" />
        </insert>
        <insert tableName="adm_role_permission">
            <column name="role_id" valueNumeric="-6" />
            <column name="permission_id" valueNumeric="14" />
        </insert>
        <insert tableName="adm_role_permission">
            <column name="role_id" valueNumeric="-6" />
            <column name="permission_id" valueNumeric="1" />
        </insert>
    </changeSet>
	
	<changeSet id="#3260_20180227 - Add finance roles" author="EdwardPLegaspi">
		<insert tableName="adm_role">
            <column name="id" value="-7" />
            <column name="version" value="0" />
            <column name="role_description" value="Finance Management" />
            <column name="role_name" value="financeManagement" />
        </insert>
        <insert tableName="adm_role">
            <column name="id" value="-8" />
            <column name="version" value="0" />
            <column name="role_description" value="Finance Visualization" />
            <column name="role_name" value="financeVisualization" />
        </insert>
        <insert tableName="adm_user_role">
        	<column name="user_id" value="-1"></column>
        	<column name="role_id" value="-7"></column>
        </insert>
        <insert tableName="adm_user_role">
        	<column name="user_id" value="-1"></column>
        	<column name="role_id" value="-8"></column>
        </insert>
	</changeSet>
	<changeSet author="anasseh" id="#3167_20022018">
	    <sql>update ${db.schema.adapted}ar_payment_gateway set description ='Ingenico API Connect OGONE for Sepa payments', code='INGENICO_OGONE_SEPA', uuid='gateway_INGENICO_ONGONE' ,disabled=0, trading_currency_id = -1 , payment_method ='DIRECTDEBIT' where id =-1</sql> 
	    <sql>delete from ${db.schema.adapted}ar_payment_gateway where id =-2</sql> 
	    <sql>delete from ${db.schema.adapted}ar_payment_gateway where id =-3</sql>   
	   	<insert tableName="ar_payment_gateway">
			<column name="id" valueNumeric="-2" />
			<column name="version" valueNumeric="0" />
			<column name="disabled" valueNumeric="0" />
			<column name="created" valueDate="now()" />
			<column name="code" value="SLIMPAY_SEPA" />
			<column name="description" value="Slimpay for Sepa payments" />
			<column name="type" value="NATIF" />
			<column name="payment_method" value="DIRECTDEBIT" />
			<column name="implementation_class_name" value="org.meveo.service.payments.impl.SlimpayGatewayPayment" />
			<column name="trading_currency_id" value="-2" /><!-- EUR -->
			<column name="uuid" value="gateway_SLIMPAY" />
		</insert>  	
	   	<insert tableName="ar_payment_gateway">
			<column name="id" valueNumeric="-3" />
			<column name="version" valueNumeric="0" />
			<column name="disabled" valueNumeric="0" />
			<column name="created" valueDate="now()" />
			<column name="code" value="INGENICO_OGONE_CARD" />
			<column name="description" value="Ingenico API Connect OGONE for Card payments" />
			<column name="type" value="NATIF" />
			<column name="payment_method" value="CARD" />
			<column name="implementation_class_name" value="org.meveo.service.payments.impl.SlimpayGatewayPayment" />
			<column name="trading_currency_id" value="-2" /><!-- EUR -->
			<column name="uuid" value="gateway_SLIMPAY" />
		</insert> 			 
    </changeSet>
    <changeSet author="anasseh" id="#3110_08032018">
   		 <sql>delete from ${db.schema.adapted}crm_provider_pay_methods where payment_method='NONE'</sql>   
    </changeSet>
    
    <changeSet author="anasseh" id="#3167_20022018_2">
	    <sql>update ${db.schema.adapted}ar_payment_gateway set country_id = 70, trading_currency_id = null where id =-1 </sql> 
	    <sql>update ${db.schema.adapted}ar_payment_gateway set country_id = 102, trading_currency_id = null where id =-2</sql> 
	</changeSet>
	
	<!--<changeSet id="#2125_20180328 Report Extracts" author="EdwardPLegaspi">-->
		<!--&lt;!&ndash;<sql><![CDATA[INSERT INTO ${db.schema.adapted}meveo_script_instance (id, version, disabled, created, code, description, src_type, script) VALUES (-1, 0, 0, now(), 'ACCOUNT_OPS', 'Export account operations', 'JAVA', '&ndash;&gt;-->
			<!--&lt;!&ndash;package org.meveo.service.script.export;&ndash;&gt;-->

<!--&lt;!&ndash;import java.io.File;&ndash;&gt;-->
<!--&lt;!&ndash;import java.io.FileWriter;&ndash;&gt;-->
<!--&lt;!&ndash;import java.text.DateFormat;&ndash;&gt;-->
<!--&lt;!&ndash;import java.text.SimpleDateFormat;&ndash;&gt;-->
<!--&lt;!&ndash;import java.util.List;&ndash;&gt;-->
<!--&lt;!&ndash;import java.util.Map;&ndash;&gt;-->

<!--&lt;!&ndash;import org.meveo.admin.exception.BusinessException;&ndash;&gt;-->
<!--&lt;!&ndash;import org.meveo.model.payments.AccountOperation;&ndash;&gt;-->
<!--&lt;!&ndash;import org.meveo.model.payments.CustomerAccount;&ndash;&gt;-->
<!--&lt;!&ndash;import org.meveo.model.payments.RecordedInvoice;&ndash;&gt;-->
<!--&lt;!&ndash;import org.meveo.service.payments.impl.AccountOperationService;&ndash;&gt;-->
<!--&lt;!&ndash;import org.meveo.service.script.Script;&ndash;&gt;-->
<!--&lt;!&ndash;import org.meveo.service.script.finance.ReportExtractScript;&ndash;&gt;-->
<!--&lt;!&ndash;import org.slf4j.Logger;&ndash;&gt;-->
<!--&lt;!&ndash;import org.slf4j.LoggerFactory;&ndash;&gt;-->
<!--&lt;!&ndash;import java.util.Date;&ndash;&gt;-->

<!--&lt;!&ndash;public class ExportAccountOperationScript extends ReportExtractScript {&ndash;&gt;-->

	<!--&lt;!&ndash;private static final Logger LOGGER = LoggerFactory.getLogger(ExportAccountOperationScript.class);&ndash;&gt;-->

    <!--&lt;!&ndash;private AccountOperationService accountOperationService = (AccountOperationService) getServiceInterface(AccountOperationService.class.getSimpleName());&ndash;&gt;-->


	<!--&lt;!&ndash;@Override&ndash;&gt;-->
	<!--&lt;!&ndash;public void execute(Map<String, Object> initContext) throws BusinessException {&ndash;&gt;-->
		<!--&lt;!&ndash;try {&ndash;&gt;-->
			<!--&lt;!&ndash;LOGGER.debug("#####################Starting of script ExportAccountOperationScript");&ndash;&gt;-->
	<!--&lt;!&ndash;&ndash;&gt;-->
			<!--&lt;!&ndash;Date startDate = (Date) initContext.get(ReportExtractScript.START_DATE);	&ndash;&gt;-->
			<!--&lt;!&ndash;Date endDate = (Date) initContext.get(ReportExtractScript.END_DATE);&ndash;&gt;-->
			<!--&lt;!&ndash;DateFormat df = new SimpleDateFormat("yyyy-MM-dd");&ndash;&gt;-->
			 <!--&lt;!&ndash;&ndash;&gt;-->
			<!--&lt;!&ndash;List<AccountOperation> accountOperations = accountOperationService.list();&ndash;&gt;-->
	        <!--&lt;!&ndash;String exportDir = String.valueOf(initContext.get(ReportExtractScript.DIR));&ndash;&gt;-->
	        <!--&lt;!&ndash;File dir = new File(exportDir);&ndash;&gt;-->
	        <!--&lt;!&ndash;if (!dir.exists()) {&ndash;&gt;-->
	            <!--&lt;!&ndash;dir.mkdirs();&ndash;&gt;-->
	        <!--&lt;!&ndash;}&ndash;&gt;-->
	        <!--&lt;!&ndash;CustomerAccount customerAccount = null;&ndash;&gt;-->
	        <!--&lt;!&ndash;StringBuilder sb =new StringBuilder();&ndash;&gt;-->
	        <!--&lt;!&ndash;sb.append("Transaction Date;Transaction Type;Amount;Due Date;Reference;Transaction Category;Invoice Date;"&ndash;&gt;-->
	        		<!--&lt;!&ndash;+ "Customer Account Code;Customer Account Description\n");&ndash;&gt;-->
	        <!--&lt;!&ndash;for (AccountOperation accountOperation : accountOperations) { &ndash;&gt;-->
	        	<!--&lt;!&ndash;if(accountOperation.getTransactionDate().equals(startDate) || accountOperation.getTransactionDate().equals(endDate)&ndash;&gt;-->
	        			<!--&lt;!&ndash;|| (accountOperation.getTransactionDate().after(startDate) && accountOperation.getTransactionDate().before(endDate))) {&ndash;&gt;-->
	        		<!--&lt;!&ndash;&ndash;&gt;-->
	        		<!--&lt;!&ndash;customerAccount = accountOperation.getCustomerAccount();&ndash;&gt;-->
	        		<!--&lt;!&ndash;sb.append(nil(accountOperation.getTransactionDate().toString())+ ";");&ndash;&gt;-->
		        	<!--&lt;!&ndash;sb.append(nil(accountOperation.getType()) + ";");&ndash;&gt;-->
		        	<!--&lt;!&ndash;sb.append(nil(accountOperation.getAmount().toString()) + ";");&ndash;&gt;-->
		        	<!--&lt;!&ndash;sb.append(isNull(accountOperation.getDueDate()) + ";");&ndash;&gt;-->
		        	<!--&lt;!&ndash;sb.append(nil(accountOperation.getReference()) + ";");&ndash;&gt;-->
		        	<!--&lt;!&ndash;sb.append(nil(accountOperation.getTransactionCategory().toString()) + ";");&ndash;&gt;-->
		        	<!--&lt;!&ndash;if(accountOperation instanceof RecordedInvoice) {&ndash;&gt;-->
		        		<!--&lt;!&ndash;RecordedInvoice invoice = (RecordedInvoice) accountOperation;&ndash;&gt;-->
			        	<!--&lt;!&ndash;sb.append(invoice.getInvoiceDate().toString() + ";");&ndash;&gt;-->
		        	<!--&lt;!&ndash;} else {&ndash;&gt;-->
			        	<!--&lt;!&ndash;sb.append(";");&ndash;&gt;-->
		        	<!--&lt;!&ndash;}&ndash;&gt;-->
		        	<!--&lt;!&ndash;sb.append(nil(customerAccount.getCode()) + ";");&ndash;&gt;-->
		        	<!--&lt;!&ndash;sb.append(nil(customerAccount.getDescriptionOrCode()) + ";\n");&ndash;&gt;-->

		        	<!--&lt;!&ndash;&ndash;&gt;-->
	        	<!--&lt;!&ndash;}&ndash;&gt;-->
	        <!--&lt;!&ndash;}&ndash;&gt;-->
          	<!--&lt;!&ndash;String strFilename = String.valueOf(initContext.get(ReportExtractScript.FILENAME));&ndash;&gt;-->
          	<!--&lt;!&ndash;LOGGER.debug("output={}", strFilename);&ndash;&gt;-->
	        <!--&lt;!&ndash;File file = new File(dir + File.separator + strFilename);&ndash;&gt;-->
	        <!--&lt;!&ndash;file.createNewFile();&ndash;&gt;-->
	        <!--&lt;!&ndash;FileWriter fileWriter = new FileWriter(file);&ndash;&gt;-->
	        <!--&lt;!&ndash;fileWriter.write(sb.toString());&ndash;&gt;-->
	        <!--&lt;!&ndash;fileWriter.close();&ndash;&gt;-->
	        <!--&lt;!&ndash;&ndash;&gt;-->
			<!--&lt;!&ndash;LOGGER.debug("#####################Ending of script ExportAccountOperationScript");&ndash;&gt;-->
		<!--&lt;!&ndash;} catch (Exception e) {&ndash;&gt;-->
			<!--&lt;!&ndash;LOGGER.error("Exception:", e);&ndash;&gt;-->
			<!--&lt;!&ndash;throw new BusinessException(e.getMessage());&ndash;&gt;-->
		<!--&lt;!&ndash;}&ndash;&gt;-->
		<!--&lt;!&ndash;&ndash;&gt;-->
	<!--&lt;!&ndash;}&ndash;&gt;-->
  <!--&lt;!&ndash;&ndash;&gt;-->
  <!--&lt;!&ndash;private String isNull(Object obj) {&ndash;&gt;-->
    <!--&lt;!&ndash;if(obj == null) {&ndash;&gt;-->
      <!--&lt;!&ndash;return "";&ndash;&gt;-->
    <!--&lt;!&ndash;} else {&ndash;&gt;-->
      <!--&lt;!&ndash;return obj.toString();&ndash;&gt;-->
    <!--&lt;!&ndash;}&ndash;&gt;-->
  <!--&lt;!&ndash;}&ndash;&gt;-->
  <!--&lt;!&ndash;&ndash;&gt;-->
	<!--&lt;!&ndash;private String nil(String word) {&ndash;&gt;-->
		<!--&lt;!&ndash;if (word == null || "null".equalsIgnoreCase(word)) {&ndash;&gt;-->
			<!--&lt;!&ndash;return "";&ndash;&gt;-->
		<!--&lt;!&ndash;} else {&ndash;&gt;-->
			<!--&lt;!&ndash;return word;&ndash;&gt;-->
		<!--&lt;!&ndash;}&ndash;&gt;-->
	<!--&lt;!&ndash;}&ndash;&gt;-->
<!--&lt;!&ndash;}		&ndash;&gt;-->
		<!--&lt;!&ndash;');]]></sql>&ndash;&gt;-->
		<!---->
		<!--<sql><![CDATA[-->
<!--INSERT INTO ${db.schema.adapted}dwh_report_extract -->
	<!--(id, version, disabled, created, code, description, category, script_type, filename_format, sql_query) -->
<!--VALUES -->
	<!--(-1, 0, 0, now(), 'SALES_JOURNAL', 'Sales Journal', 'sales', 'SQL', 'sales-[yyyy_MM_dd].csv', '-->
<!--SELECT-->
    <!--TO_CHAR(ao.invoice_date,''MM'') AS "Mois",-->
    <!--TO_CHAR(ao.invoice_date,''DD/MM/YYYY'') AS "Date facture",-->
    <!--text(''HG'') AS "Code comptable",-->
    <!--ae.code AS "Client facturé",-->
    <!--text(''MAI'') AS "Type article",-->
    <!--split_part(bac.code, '','', 6) AS "Famille statistique",-->
    <!--split_part(bac.code, '','', 2) AS "Article",-->
    <!--trim(TO_CHAR(ia.amount_without_tax,''9999990D00'')) AS "Montant HT",-->
    <!--trim(TO_CHAR(ia.quantity,''9999990'')) AS "Qté facturée",-->
    <!--ao.reference AS "No facture",-->
    <!--ao.occ_description AS "Catégorie facture",-->
    <!--ao.occ_code AS "Type de pièce",-->
    <!--text(''VEN'') AS "Journal"-->
<!--FROM-->
    <!--account_entity ae-->
<!--INNER JOIN ar_account_operation ao ON ao.customer_account_id = ae.id-->
<!--INNER JOIN billing_invoice i ON i.invoice_number = ao.reference-->
<!--INNER JOIN billing_invoice_agregate ia ON (ia.invoice_id = i.id AND type = ''F'')-->
<!--LEFT JOIN billing_accounting_code bac ON bac.id = ia.accounting_code_id-->
<!--WHERE :START_DATE<>:END_DATE-->
<!--AND ae.account_type = ''ACCT_CA''-->
<!--AND ao.invoice_date >= to_date(''01/'' || TO_CHAR(CURRENT_DATE,''MM/YYYY''),''DD/MM/YYYY'') + interval ''-12 month''-->
<!--AND ao.invoice_date <= to_date(''01/'' || TO_CHAR(CURRENT_DATE,''MM/YYYY''),''DD/MM/YYYY'') + interval ''0 month''-->
<!--ORDER BY-->
    <!--ae.code,-->
    <!--occ_code,-->
    <!--split_part(bac.code, '','', 6),-->
    <!--split_part(bac.code, '','', 2);-->
<!--')-->
		<!--]]></sql>-->
		<!---->
		<!--<insert tableName="dwh_report_extract_params">-->
			<!--<column name="reportextract_id" value="-1"></column>-->
			<!--<column name="params_key" value="START_DATE"></column>-->
			<!--<column name="params" value="31/01/2017"></column>-->
		<!--</insert>-->
		<!---->
		<!--<insert tableName="dwh_report_extract_params">-->
			<!--<column name="reportextract_id" value="-1"></column>-->
			<!--<column name="params_key" value="END_DATE"></column>-->
			<!--<column name="params" value="31/12/2018"></column>-->
		<!--</insert>-->
		<!---->
		<!--<insert tableName="dwh_report_extract">-->
			<!--<column name="id" valueNumeric="-2" />-->
			<!--<column name="version" valueNumeric="0" />-->
			<!--<column name="disabled" valueNumeric="0" />-->
			<!--<column name="created" valueDate="now()" />-->
			<!--<column name="code" value="ACCOUNT_OPS" />-->
			<!--<column name="description" value="Export account operations" />-->
			<!--<column name="category" value="sales"></column>-->
			<!--<column name="script_type" value="JAVA"></column>-->
			<!--<column name="filename_format" value="accounts-ops-[yyyy_MM_dd].csv"></column>-->
			<!--<column name="script_instance_id" value="-1"></column>-->
		<!--</insert>-->
		<!---->
		<!--<insert tableName="dwh_report_extract_params">-->
			<!--<column name="reportextract_id" value="-2"></column>-->
			<!--<column name="params_key" value="START_DATE"></column>-->
			<!--<column name="params" value="31/01/2017"></column>-->
		<!--</insert>-->
		<!---->
		<!--<insert tableName="dwh_report_extract_params">-->
			<!--<column name="reportextract_id" value="-2"></column>-->
			<!--<column name="params_key" value="END_DATE"></column>-->
			<!--<column name="params" value="31/12/2018"></column>-->
		<!--</insert>-->
		<!---->
	<!--</changeSet>-->
	
	 <changeSet id="#3234_05042018_1 - Homogenization of Account Operation types" author="anansseh" dbms="mysql">
        <sql>INSERT INTO ${db.schema.adapted}billing_accounting_code (version, disabled, created, code,  creator,  chart_of_account_type, chart_of_account_view_type, migrated)   VALUES (0, 0, CURRENT_TIMESTAMP(), '654100000', 'meveo.admin', 'ASSETS', 'REGULAR', 1)</sql>
	    <sql>insert into ${db.schema.adapted}ar_occ_template (version,disabled,created,accounting_code_id,account_code_client_side,code, description,occ_category,creator) values (0,0,CURRENT_TIMESTAMP(),(select id from ${db.schema.adapted}billing_accounting_code where code='512010000'),'411000000','PAY_CRD','Payment - card','CREDIT','meveo.admin')</sql>
		<sql>insert into ${db.schema.adapted}ar_occ_template (version,disabled,created,accounting_code_id,account_code_client_side,code, description,occ_category,creator) values (0,0,CURRENT_TIMESTAMP(),(select id from ${db.schema.adapted}billing_accounting_code where code='654100000'),'411000000','EXP_WRT','Expense - bad debt write-off','DEBIT','meveo.admin')</sql>
        <sql><![CDATA[update ${db.schema.adapted}billing_accounting_code_seq set next_val=(select id+1 from ${db.schema.adapted}billing_accounting_code order by id desc limit 1);]]></sql>
	</changeSet>
     
    <changeSet id="#3234_05042018_2 - Homogenization of Account Operation types" author="anansseh" dbms="postgresql">
         <sql>INSERT INTO ${db.schema.adapted}billing_accounting_code (id,version, disabled, created, code,  creator,  chart_of_account_type, chart_of_account_view_type, migrated) VALUES (nextval('${db.schema.adapted}billing_accounting_code_seq'),0, 0, current_timestamp, '654100000', 'meveo.admin', 'ASSETS', 'REGULAR', 1)</sql>
	    <sql>insert into ${db.schema.adapted}ar_occ_template (id,version,disabled,created,accounting_code_id,account_code_client_side,code, description,occ_category,creator) values (nextval('${db.schema.adapted}ar_occ_template_seq'),0,0,current_timestamp,(select id from ${db.schema.adapted}billing_accounting_code where code='512010000'),'411000000','PAY_CRD','Payment - card','CREDIT','meveo.admin')</sql>
		<sql>insert into ${db.schema.adapted}ar_occ_template (id,version,disabled,created,accounting_code_id,account_code_client_side,code, description,occ_category,creator) values (nextval('${db.schema.adapted}ar_occ_template_seq'),0,0,current_timestamp,(select id from ${db.schema.adapted}billing_accounting_code where code='654100000'),'411000000','EXP_WRT','Expense - bad debt write-off','DEBIT','meveo.admin')</sql>
    </changeSet>	
    
    <changeSet id="#3260_20180409 - Delete roles, add to permission" author="EdwardPLegaspi">
    	<delete tableName="adm_user_role">
    		<where>role_id=-7</where>
    	</delete>
    	<delete tableName="adm_user_role">
    		<where>role_id=-8</where>
    	</delete>
    	<delete tableName="adm_role">
    		<where>id=-7</where>
    	</delete>
    	<delete tableName="adm_role">
    		<where>id=-8</where>
    	</delete>
    	<insert tableName="adm_permission">
            <column name="id" valueNumeric="-29" />
            <column name="name" value="Finance Management" />
            <column name="permission" value="financeManagement" />
        </insert>
        <insert tableName="adm_permission">
            <column name="id" valueNumeric="-30" />
            <column name="name" value="Finance Visualization" />
            <column name="permission" value="financeVisualization" />
        </insert>
        <insert tableName="adm_role_permission">
            <column name="role_id" valueNumeric="-1" />
            <column name="permission_id" valueNumeric="-29" />
        </insert>
        <insert tableName="adm_role_permission">
            <column name="role_id" valueNumeric="-1" />
            <column name="permission_id" valueNumeric="-30" />
        </insert>
	</changeSet>
        
</databaseChangeLog>